#!/usr/bin/env ruby

require 'platform'
require 'protoc/version'

PLATFORM_TO_PROTOC_ARCH = {:x86 => :x86_32, :x86_64 => :x86_64, :powerpc => :powerpc}

def exec_protoc_for_os(os)
  case Platform::OS
    when :win32
      exec("#{File.dirname(__FILE__)}/protoc-#{Protoc::PROTOBUF_VERSION}-#{os}-#{PLATFORM_TO_PROTOC_ARCH[Platform::ARCH]}.exe", *ARGV)
     when :aix
      exec("LIBPATH=/opt/freeware/lib #{File.dirname(__FILE__)}/protoc-#{Protoc::PROTOBUF_VERSION}-#{os}-#{PLATFORM_TO_PROTOC_ARCH[Platform::ARCH]}", *ARGV)
    else
      exec("#{File.dirname(__FILE__)}/protoc-#{Protoc::PROTOBUF_VERSION}-#{os}-#{PLATFORM_TO_PROTOC_ARCH[Platform::ARCH]}", *ARGV)
  end
end

case Platform::OS
  when :win32
    exec_protoc_for_os('windows')
  when :unix
    case Platform::IMPL
      when :macosx
        exec_protoc_for_os('osx')
      when :linux
        exec_protoc_for_os('linux')
      when :aix
        exec_protoc_for_os('aix')
      else
        raise "I don't have a binary for #{Platform::IMPL}"
    end
  else
    raise "I don't have a binary for #{Platform::OS}"
end
